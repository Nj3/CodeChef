def relcreate():
	"""it creates a dictionary to map the direct relationship between 1 person to other"""
	for i in ppl:
		for j in range(len(ip)):
			if i in ip[j] and i in rel:
				rel[i].extend(ip[j])
			elif i in ip[j] and i not in rel:
				rel[i] = list(ip[j])
			else:
				pass
	for i in rel:
		rel[i] = list(set(rel[i]))

def relcheck():
	"""it checks whether the invitation is reached out to all"""
	count = 0
	length = [len(rel[i]) for i in rel]
	# length.sort(reverse = True)
	# print(length)
	if n in length: #only possible if a person can reach to all other persons
		count+=1
		return count
	else:
		count+=1
		for k,v in rel.items():
			sortd_rel.append(v)
		# print(sortd_rel)
		sortd_rel.sort(key=len,reverse = True)
		# print(sortd_rel)
		tlst = [i for i in ppl if i not in sortd_rel[0]]
		tset = set(tlst)
		len_tset = len(tset)
		# print(tlst,tset,len_tset)
		for i in range(1,len(sortd_rel)-1):
			if tset <= set(sortd_rel[i]):
				count+= 1
				break
			else:
				tset-=set(sortd_rel[i])
				# print(tset,i,sortd_rel[i])
				if i < len(sortd_rel) - 2:
					if len_tset > len(tset):
						count+=1
						len_tset = len(tset)
						# print('AFter reassigning',len_tset)# reassigning the variable so that it loops properly
						if len_tset == 0:
							break
					else:
						continue
				elif i == len(sortd_rel) - 2:
					if len_tset > 0:
						count+=len_tset
						break
		return count

t = int(input())
for itr in range(t):
	n,m=map(int,input().split())
	ppl = [i for i in range(1,n+1)]
	# print(ppl)
	if m == 0:
		print(n)
	else:
		ip = [[int(i) for i in input().split()] for lines in range(m)]
		# print(ip)
		rel = {}
		sortd_rel = [[]]
		# print(rel)
		relcreate()
		# print('the new rel is',rel)
		print(relcheck())
